
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.natureandharmony.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.client.event.RegisterColorHandlersEvent;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;

import net.mcreator.natureandharmony.block.YellowBurstdflowerBlock;
import net.mcreator.natureandharmony.block.WitheredMossBlock;
import net.mcreator.natureandharmony.block.WhiteRoseBlock;
import net.mcreator.natureandharmony.block.VenomitePolishedStairsBlock;
import net.mcreator.natureandharmony.block.VenomitePolishedSlabBlock;
import net.mcreator.natureandharmony.block.VenomitePolishedBlock;
import net.mcreator.natureandharmony.block.VenomiteBlock;
import net.mcreator.natureandharmony.block.VekrenitePolishedBlock;
import net.mcreator.natureandharmony.block.VekreniteBricksWallBlock;
import net.mcreator.natureandharmony.block.VekreniteBricksStairsBlock;
import net.mcreator.natureandharmony.block.VekreniteBricksSlabBlock;
import net.mcreator.natureandharmony.block.VekreniteBricksBlock;
import net.mcreator.natureandharmony.block.VekreniteBlock;
import net.mcreator.natureandharmony.block.UnderworldSandstoneBlock;
import net.mcreator.natureandharmony.block.UnderworldSandBlock;
import net.mcreator.natureandharmony.block.UnderworldPortalBlock;
import net.mcreator.natureandharmony.block.UnderworldGrassTuftsBlock;
import net.mcreator.natureandharmony.block.UnderworldGrassTallFrostedBlock;
import net.mcreator.natureandharmony.block.UnderworldGrassTallBlock;
import net.mcreator.natureandharmony.block.UnderworldGrassShortFrostedBlock;
import net.mcreator.natureandharmony.block.UnderworldGrassRedFloweredBlock;
import net.mcreator.natureandharmony.block.UnderworldGrassRedBlock;
import net.mcreator.natureandharmony.block.UnderworldGrassPlantBlock;
import net.mcreator.natureandharmony.block.UnderworldGrassFrostedBlock;
import net.mcreator.natureandharmony.block.UnderworldGrassFloweredfBlock;
import net.mcreator.natureandharmony.block.UnderworldGrassBlock;
import net.mcreator.natureandharmony.block.UnderworldDirtBlock;
import net.mcreator.natureandharmony.block.UnderworldBellflowerBlock;
import net.mcreator.natureandharmony.block.TuffTilesBlock;
import net.mcreator.natureandharmony.block.TuffPathGrassBlock;
import net.mcreator.natureandharmony.block.TuffPathDirtBlock;
import net.mcreator.natureandharmony.block.TuffPathBlock;
import net.mcreator.natureandharmony.block.TuffBricksWallBlock;
import net.mcreator.natureandharmony.block.TuffBricksStairsBlock;
import net.mcreator.natureandharmony.block.TuffBricksSlabBlock;
import net.mcreator.natureandharmony.block.TuffBricksBlock;
import net.mcreator.natureandharmony.block.TopazOreBlock;
import net.mcreator.natureandharmony.block.TopazBlockBlock;
import net.mcreator.natureandharmony.block.TomatoStage5Block;
import net.mcreator.natureandharmony.block.TomatoStage4Block;
import net.mcreator.natureandharmony.block.TomatoStage3Block;
import net.mcreator.natureandharmony.block.TomatoStage2Block;
import net.mcreator.natureandharmony.block.TomatoStage1Block;
import net.mcreator.natureandharmony.block.TallIceSpikeBlockBlock;
import net.mcreator.natureandharmony.block.SunDialFlowerBlock;
import net.mcreator.natureandharmony.block.SulphurOreBlock;
import net.mcreator.natureandharmony.block.StrawberryStage5Block;
import net.mcreator.natureandharmony.block.StrawberryStage4Block;
import net.mcreator.natureandharmony.block.StrawberryStage3Block;
import net.mcreator.natureandharmony.block.StrawberryStage2Block;
import net.mcreator.natureandharmony.block.StrawberryStage1Block;
import net.mcreator.natureandharmony.block.StoneTilesBlock;
import net.mcreator.natureandharmony.block.StonePillarBlock;
import net.mcreator.natureandharmony.block.StonePathGrassBlock;
import net.mcreator.natureandharmony.block.StonePathDirtBlock;
import net.mcreator.natureandharmony.block.StonePathBlock;
import net.mcreator.natureandharmony.block.StonePanelBlock;
import net.mcreator.natureandharmony.block.SmoothCutCastIronBlock;
import net.mcreator.natureandharmony.block.SmoothCastIronBlockBlock;
import net.mcreator.natureandharmony.block.SilverOreBlock;
import net.mcreator.natureandharmony.block.ScoriaRedPolishedBlock;
import net.mcreator.natureandharmony.block.ScoriaRedBricksStairsBlock;
import net.mcreator.natureandharmony.block.ScoriaRedBricksSlabBlock;
import net.mcreator.natureandharmony.block.ScoriaRedBricksBlock;
import net.mcreator.natureandharmony.block.ScoriaRedBlock;
import net.mcreator.natureandharmony.block.ScoriaPolishedBlock;
import net.mcreator.natureandharmony.block.ScoriaGrayBlock;
import net.mcreator.natureandharmony.block.ScoriaBricksStairsBlock;
import net.mcreator.natureandharmony.block.ScoriaBricksSlabRecipeBlock;
import net.mcreator.natureandharmony.block.ScoriaBricksBlock;
import net.mcreator.natureandharmony.block.RoseGoldOreBlock;
import net.mcreator.natureandharmony.block.RoseGoldBlockBlock;
import net.mcreator.natureandharmony.block.RibbedCastIronBlock;
import net.mcreator.natureandharmony.block.RhodusitePolishedBlock;
import net.mcreator.natureandharmony.block.RhodusiteBricksStairsBlock;
import net.mcreator.natureandharmony.block.RhodusiteBricksSlabBlock;
import net.mcreator.natureandharmony.block.RhodusiteBricksBlock;
import net.mcreator.natureandharmony.block.RhodusiteBlock;
import net.mcreator.natureandharmony.block.RedRoseBlock;
import net.mcreator.natureandharmony.block.RawSilverBlockBlock;
import net.mcreator.natureandharmony.block.RawRoseGoldBlockBlock;
import net.mcreator.natureandharmony.block.RawActiniumBlockBlock;
import net.mcreator.natureandharmony.block.QuartzDustBlockBlock;
import net.mcreator.natureandharmony.block.PurpleBurstFlowerBlock;
import net.mcreator.natureandharmony.block.PolishedStoneBlock;
import net.mcreator.natureandharmony.block.PolishedMarbleStairsBlock;
import net.mcreator.natureandharmony.block.PolishedMarbleSlabBlock;
import net.mcreator.natureandharmony.block.PolishedMarbleBlock;
import net.mcreator.natureandharmony.block.PolishedLimestoneStairsRecipeBlock;
import net.mcreator.natureandharmony.block.PolishedLimestoneSlabBlock;
import net.mcreator.natureandharmony.block.PolishedLimestoneBlock;
import net.mcreator.natureandharmony.block.PolishedCorkiteBlock;
import net.mcreator.natureandharmony.block.PolishedBlackMarbleStairsBlock;
import net.mcreator.natureandharmony.block.PolishedBlackMarbleSlabBlock;
import net.mcreator.natureandharmony.block.PolishedBlackMarbleBlock;
import net.mcreator.natureandharmony.block.PolishedAntimoniteStairsBlock;
import net.mcreator.natureandharmony.block.PolishedAntimoniteSlabBlock;
import net.mcreator.natureandharmony.block.PolishedAntimoniteBlock;
import net.mcreator.natureandharmony.block.PolishedAnthraciteStairsBlock;
import net.mcreator.natureandharmony.block.PolishedAnthraciteSlabBlock;
import net.mcreator.natureandharmony.block.PolishedAnthraciteBlock;
import net.mcreator.natureandharmony.block.PinkRoseBlock;
import net.mcreator.natureandharmony.block.PeakSchistStairsBlock;
import net.mcreator.natureandharmony.block.PeakSchistSlabBlock;
import net.mcreator.natureandharmony.block.PeakSchistPolishedBlock;
import net.mcreator.natureandharmony.block.PeakSchistBricksWallBlock;
import net.mcreator.natureandharmony.block.PeakSchistBricksBlock;
import net.mcreator.natureandharmony.block.PeakSchistBlock;
import net.mcreator.natureandharmony.block.OpenFlowerBlock;
import net.mcreator.natureandharmony.block.NetherrackPathWarpedNyliumBlock;
import net.mcreator.natureandharmony.block.NetherrackPathCrimsonNyliumBlock;
import net.mcreator.natureandharmony.block.NetherrackPathBlock;
import net.mcreator.natureandharmony.block.MossyNetherrackBlock;
import net.mcreator.natureandharmony.block.MossyChiseledStoneBricksBlock;
import net.mcreator.natureandharmony.block.MorgonitePolishedBlock;
import net.mcreator.natureandharmony.block.MorgoniteBricksStairsBlock;
import net.mcreator.natureandharmony.block.MorgoniteBricksSlabBlock;
import net.mcreator.natureandharmony.block.MorgoniteBricksBlock;
import net.mcreator.natureandharmony.block.MorgoniteBlock;
import net.mcreator.natureandharmony.block.MicheriteOreBlock;
import net.mcreator.natureandharmony.block.MarbleTilesBlock;
import net.mcreator.natureandharmony.block.MarblePillarUpperBlock;
import net.mcreator.natureandharmony.block.MarblePillarMiddleBlock;
import net.mcreator.natureandharmony.block.MarblePillarLowerBlock;
import net.mcreator.natureandharmony.block.MarblePanelBlock;
import net.mcreator.natureandharmony.block.MarbleBricksStairsBlock;
import net.mcreator.natureandharmony.block.MarbleBricksSlabBlock;
import net.mcreator.natureandharmony.block.MarbleBricksBlock;
import net.mcreator.natureandharmony.block.MarbleBlock;
import net.mcreator.natureandharmony.block.MarbleBlackTilesBlock;
import net.mcreator.natureandharmony.block.MarbleBlackStairsBlock;
import net.mcreator.natureandharmony.block.MarbleBlackPillarUpperBlock;
import net.mcreator.natureandharmony.block.MarbleBlackPillarMiddleBlock;
import net.mcreator.natureandharmony.block.MarbleBlackPillarLowerBlock;
import net.mcreator.natureandharmony.block.MarbleBlackPanelBlock;
import net.mcreator.natureandharmony.block.MarbleBlackBricksSlabBlock;
import net.mcreator.natureandharmony.block.MarbleBlackBricksBlock;
import net.mcreator.natureandharmony.block.LimestoneTilesWallBlock;
import net.mcreator.natureandharmony.block.LimestoneTilesStairsBlock;
import net.mcreator.natureandharmony.block.LimestoneTilesSlabBlock;
import net.mcreator.natureandharmony.block.LimestoneTilesBlock;
import net.mcreator.natureandharmony.block.LimestoneCrackedBricksBlock;
import net.mcreator.natureandharmony.block.LimestoneBricksBlock;
import net.mcreator.natureandharmony.block.LimestoneBlock;
import net.mcreator.natureandharmony.block.LeatherBlockBlock;
import net.mcreator.natureandharmony.block.LargeLanternWallBlock;
import net.mcreator.natureandharmony.block.LargeLanternBlock;
import net.mcreator.natureandharmony.block.LargeChainsBlock;
import net.mcreator.natureandharmony.block.LargeCastIronBlockBlock;
import net.mcreator.natureandharmony.block.IceSpikeBlockBlock;
import net.mcreator.natureandharmony.block.HeatedCorkiteBlock;
import net.mcreator.natureandharmony.block.GreenFireBlock;
import net.mcreator.natureandharmony.block.GrapesWhiteStage5Block;
import net.mcreator.natureandharmony.block.GrapesWhiteStage4Block;
import net.mcreator.natureandharmony.block.GrapesWhiteStage3Block;
import net.mcreator.natureandharmony.block.GrapesWhiteStage2Block;
import net.mcreator.natureandharmony.block.GrapesWhiteStage1Block;
import net.mcreator.natureandharmony.block.GrapeStage5Block;
import net.mcreator.natureandharmony.block.GrapeStage4Block;
import net.mcreator.natureandharmony.block.GrapeStage3Block;
import net.mcreator.natureandharmony.block.GrapeStage2Block;
import net.mcreator.natureandharmony.block.GrapeStage1Block;
import net.mcreator.natureandharmony.block.GlowingObsidianBlock;
import net.mcreator.natureandharmony.block.FrostBlock;
import net.mcreator.natureandharmony.block.EminenceWartBlock;
import net.mcreator.natureandharmony.block.EminenceTrapdoorBlock;
import net.mcreator.natureandharmony.block.EminenceStemBlock;
import net.mcreator.natureandharmony.block.EminenceRootsBlock;
import net.mcreator.natureandharmony.block.EminencePlanksStairsBlock;
import net.mcreator.natureandharmony.block.EminencePlanksSlabBlock;
import net.mcreator.natureandharmony.block.EminenceFungusBlock;
import net.mcreator.natureandharmony.block.EminenceFlowerBlock;
import net.mcreator.natureandharmony.block.EminenceFenceGateBlock;
import net.mcreator.natureandharmony.block.EminenceFenceBlock;
import net.mcreator.natureandharmony.block.EminenceDoorBlock;
import net.mcreator.natureandharmony.block.DeadWeedsBlock;
import net.mcreator.natureandharmony.block.DeadWeeds3Block;
import net.mcreator.natureandharmony.block.DeadWeeds2Block;
import net.mcreator.natureandharmony.block.DarkoniteTilesBlock;
import net.mcreator.natureandharmony.block.DarkoniteSnowyBlock;
import net.mcreator.natureandharmony.block.DarkonitePolishedStairsBlock;
import net.mcreator.natureandharmony.block.DarkonitePolishedSlabBlock;
import net.mcreator.natureandharmony.block.DarkonitePolishedBlock;
import net.mcreator.natureandharmony.block.DarkoniteChiseledBlock;
import net.mcreator.natureandharmony.block.DarkoniteCarvedBlock;
import net.mcreator.natureandharmony.block.DarkoniteBricksStairsBlock;
import net.mcreator.natureandharmony.block.DarkoniteBricksSlabBlock;
import net.mcreator.natureandharmony.block.DarkoniteBricksBlock;
import net.mcreator.natureandharmony.block.DarkoniteBlock;
import net.mcreator.natureandharmony.block.DarkoniteBlackTilesBlock;
import net.mcreator.natureandharmony.block.DarkoniteBlackPolishedStairsBlock;
import net.mcreator.natureandharmony.block.DarkoniteBlackPolishedSlabBlock;
import net.mcreator.natureandharmony.block.DarkoniteBlackPolishedBlock;
import net.mcreator.natureandharmony.block.DarkoniteBlackChiseledBlock;
import net.mcreator.natureandharmony.block.DarkoniteBlackCarvedBlock;
import net.mcreator.natureandharmony.block.DarkoniteBlackBricksStairsBlock;
import net.mcreator.natureandharmony.block.DarkoniteBlackBricksSlabBlock;
import net.mcreator.natureandharmony.block.DarkoniteBlackBricksBlock;
import net.mcreator.natureandharmony.block.DarkoniteBlackBlock;
import net.mcreator.natureandharmony.block.CyanRoseBlock;
import net.mcreator.natureandharmony.block.CutIronPanelsBlock;
import net.mcreator.natureandharmony.block.CutDirtBlock;
import net.mcreator.natureandharmony.block.CutCastIronBlock;
import net.mcreator.natureandharmony.block.CreamalenSmoothBlock;
import net.mcreator.natureandharmony.block.CreamalenPolishedBlock;
import net.mcreator.natureandharmony.block.CreamalenCobblestoneBlock;
import net.mcreator.natureandharmony.block.CreamalanBlock;
import net.mcreator.natureandharmony.block.CrackedMossyStoneBricksBlock;
import net.mcreator.natureandharmony.block.CrackedChiseledStoneBricksBlock;
import net.mcreator.natureandharmony.block.CrackedCarboriteBlock;
import net.mcreator.natureandharmony.block.CottonStage4Block;
import net.mcreator.natureandharmony.block.CottonStage3Block;
import net.mcreator.natureandharmony.block.CottonStage2Block;
import net.mcreator.natureandharmony.block.CottonStage1Block;
import net.mcreator.natureandharmony.block.CorkitePolishedStairsBlock;
import net.mcreator.natureandharmony.block.CorkitePolishedSlabBlock;
import net.mcreator.natureandharmony.block.CorkiteBricksBlock;
import net.mcreator.natureandharmony.block.CorkiteBlock;
import net.mcreator.natureandharmony.block.CirculatumFlowerBlock;
import net.mcreator.natureandharmony.block.ChiseledStoneTilesBlock;
import net.mcreator.natureandharmony.block.ChiseledLimestoneBlock;
import net.mcreator.natureandharmony.block.ChalkWhiteBlock;
import net.mcreator.natureandharmony.block.ChalkRedBlock;
import net.mcreator.natureandharmony.block.ChalkBlueBlock;
import net.mcreator.natureandharmony.block.CastIronTilesBlock;
import net.mcreator.natureandharmony.block.CastIronBlockBlock;
import net.mcreator.natureandharmony.block.CarvedStonePanelBlock;
import net.mcreator.natureandharmony.block.CarboritePolishedBlock;
import net.mcreator.natureandharmony.block.CarboriteCobblestoneBlock;
import net.mcreator.natureandharmony.block.CarboriteBlock;
import net.mcreator.natureandharmony.block.CalcitePolishedBlock;
import net.mcreator.natureandharmony.block.CalcitePathGrassBlock;
import net.mcreator.natureandharmony.block.CalcitePathDirtBlock;
import net.mcreator.natureandharmony.block.CalcitePathBlock;
import net.mcreator.natureandharmony.block.CalciteBricksWallBlock;
import net.mcreator.natureandharmony.block.CalciteBricksStairsBlock;
import net.mcreator.natureandharmony.block.CalciteBricksSlabBlock;
import net.mcreator.natureandharmony.block.CalciteBricksBlock;
import net.mcreator.natureandharmony.block.CactusBlock;
import net.mcreator.natureandharmony.block.BuddedFlowerBlock;
import net.mcreator.natureandharmony.block.BloodOakTrapdoorBlock;
import net.mcreator.natureandharmony.block.BloodOakSlabBlock;
import net.mcreator.natureandharmony.block.BloodOakPressurePlateBlock;
import net.mcreator.natureandharmony.block.BloodOakPlanksStairsBlock;
import net.mcreator.natureandharmony.block.BloodOakPlanksBlock;
import net.mcreator.natureandharmony.block.BloodOakLogBlock;
import net.mcreator.natureandharmony.block.BloodOakLeavesBlock;
import net.mcreator.natureandharmony.block.BloodOakFenceGateBlock;
import net.mcreator.natureandharmony.block.BloodOakFenceBlock;
import net.mcreator.natureandharmony.block.BloodOakDoorBlock;
import net.mcreator.natureandharmony.block.BloodOakButtonBlock;
import net.mcreator.natureandharmony.block.BlackMarbleBlock;
import net.mcreator.natureandharmony.block.BauxitePolishedStairsBlock;
import net.mcreator.natureandharmony.block.BauxitePolishedSlabBlock;
import net.mcreator.natureandharmony.block.BauxitePolishedBlock;
import net.mcreator.natureandharmony.block.BauxiteBlock;
import net.mcreator.natureandharmony.block.AshTuffsBlock;
import net.mcreator.natureandharmony.block.AshGildedIronBlock;
import net.mcreator.natureandharmony.block.AshGildedGoldBlock;
import net.mcreator.natureandharmony.block.AshGildedDiamondBlock;
import net.mcreator.natureandharmony.block.AshBlock;
import net.mcreator.natureandharmony.block.AntimoniteTilesBlock;
import net.mcreator.natureandharmony.block.AntimonitePatternedBlock;
import net.mcreator.natureandharmony.block.AntimonitePanelStairsRecipeBlock;
import net.mcreator.natureandharmony.block.AntimonitePanelSlabBlock;
import net.mcreator.natureandharmony.block.AntimonitePanelBlock;
import net.mcreator.natureandharmony.block.AntimoniteChiseledBlock;
import net.mcreator.natureandharmony.block.AntimoniteBlock;
import net.mcreator.natureandharmony.block.AnthraciteTiledBricksBlock;
import net.mcreator.natureandharmony.block.AnthraciteSmallTilesBlock;
import net.mcreator.natureandharmony.block.AnthraciteBricksStairsBlock;
import net.mcreator.natureandharmony.block.AnthraciteBricksSmallStairsBlock;
import net.mcreator.natureandharmony.block.AnthraciteBricksSmallSlabBlock;
import net.mcreator.natureandharmony.block.AnthraciteBricksSmallBlock;
import net.mcreator.natureandharmony.block.AnthraciteBricksSlabBlock;
import net.mcreator.natureandharmony.block.AnthraciteBricksBlock;
import net.mcreator.natureandharmony.block.AnthraciteBlock;
import net.mcreator.natureandharmony.block.ActiniumOreBlock;
import net.mcreator.natureandharmony.NatureAndHarmonyMod;

public class NatureAndHarmonyModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, NatureAndHarmonyMod.MODID);
	public static final RegistryObject<Block> CRACKED_MOSSY_STONE_BRICKS = REGISTRY.register("cracked_mossy_stone_bricks", () -> new CrackedMossyStoneBricksBlock());
	public static final RegistryObject<Block> CRACKED_CHISELED_STONE_BRICKS = REGISTRY.register("cracked_chiseled_stone_bricks", () -> new CrackedChiseledStoneBricksBlock());
	public static final RegistryObject<Block> MOSSY_CHISELED_STONE_BRICKS = REGISTRY.register("mossy_chiseled_stone_bricks", () -> new MossyChiseledStoneBricksBlock());
	public static final RegistryObject<Block> STONE_TILES = REGISTRY.register("stone_tiles", () -> new StoneTilesBlock());
	public static final RegistryObject<Block> CHISELED_STONE_TILES = REGISTRY.register("chiseled_stone_tiles", () -> new ChiseledStoneTilesBlock());
	public static final RegistryObject<Block> STONE_PILLAR = REGISTRY.register("stone_pillar", () -> new StonePillarBlock());
	public static final RegistryObject<Block> STONE_PANEL = REGISTRY.register("stone_panel", () -> new StonePanelBlock());
	public static final RegistryObject<Block> STONE_PATH = REGISTRY.register("stone_path", () -> new StonePathBlock());
	public static final RegistryObject<Block> STONE_PATH_DIRT = REGISTRY.register("stone_path_dirt", () -> new StonePathDirtBlock());
	public static final RegistryObject<Block> STONE_PATH_GRASS = REGISTRY.register("stone_path_grass", () -> new StonePathGrassBlock());
	public static final RegistryObject<Block> ASH = REGISTRY.register("ash", () -> new AshBlock());
	public static final RegistryObject<Block> SULPHUR_ORE = REGISTRY.register("sulphur_ore", () -> new SulphurOreBlock());
	public static final RegistryObject<Block> MARBLE = REGISTRY.register("marble", () -> new MarbleBlock());
	public static final RegistryObject<Block> POLISHED_MARBLE = REGISTRY.register("polished_marble", () -> new PolishedMarbleBlock());
	public static final RegistryObject<Block> POLISHED_MARBLE_SLAB = REGISTRY.register("polished_marble_slab", () -> new PolishedMarbleSlabBlock());
	public static final RegistryObject<Block> POLISHED_MARBLE_STAIRS = REGISTRY.register("polished_marble_stairs", () -> new PolishedMarbleStairsBlock());
	public static final RegistryObject<Block> MARBLE_PANEL = REGISTRY.register("marble_panel", () -> new MarblePanelBlock());
	public static final RegistryObject<Block> MARBLE_BRICKS = REGISTRY.register("marble_bricks", () -> new MarbleBricksBlock());
	public static final RegistryObject<Block> MARBLE_BRICKS_SLAB = REGISTRY.register("marble_bricks_slab", () -> new MarbleBricksSlabBlock());
	public static final RegistryObject<Block> MARBLE_BRICKS_STAIRS = REGISTRY.register("marble_bricks_stairs", () -> new MarbleBricksStairsBlock());
	public static final RegistryObject<Block> MARBLE_TILES = REGISTRY.register("marble_tiles", () -> new MarbleTilesBlock());
	public static final RegistryObject<Block> MARBLE_PILLAR_LOWER = REGISTRY.register("marble_pillar_lower", () -> new MarblePillarLowerBlock());
	public static final RegistryObject<Block> MARBLE_PILLAR_MIDDLE = REGISTRY.register("marble_pillar_middle", () -> new MarblePillarMiddleBlock());
	public static final RegistryObject<Block> MARBLE_PILLAR_UPPER = REGISTRY.register("marble_pillar_upper", () -> new MarblePillarUpperBlock());
	public static final RegistryObject<Block> BLACK_MARBLE = REGISTRY.register("black_marble", () -> new BlackMarbleBlock());
	public static final RegistryObject<Block> POLISHED_BLACK_MARBLE = REGISTRY.register("polished_black_marble", () -> new PolishedBlackMarbleBlock());
	public static final RegistryObject<Block> POLISHED_BLACK_MARBLE_SLAB = REGISTRY.register("polished_black_marble_slab", () -> new PolishedBlackMarbleSlabBlock());
	public static final RegistryObject<Block> POLISHED_BLACK_MARBLE_STAIRS = REGISTRY.register("polished_black_marble_stairs", () -> new PolishedBlackMarbleStairsBlock());
	public static final RegistryObject<Block> MARBLE_BLACK_PANEL = REGISTRY.register("marble_black_panel", () -> new MarbleBlackPanelBlock());
	public static final RegistryObject<Block> MARBLE_BLACK_BRICKS = REGISTRY.register("marble_black_bricks", () -> new MarbleBlackBricksBlock());
	public static final RegistryObject<Block> MARBLE_BLACK_BRICKS_SLAB = REGISTRY.register("marble_black_bricks_slab", () -> new MarbleBlackBricksSlabBlock());
	public static final RegistryObject<Block> MARBLE_BLACK_STAIRS = REGISTRY.register("marble_black_stairs", () -> new MarbleBlackStairsBlock());
	public static final RegistryObject<Block> MARBLE_BLACK_TILES = REGISTRY.register("marble_black_tiles", () -> new MarbleBlackTilesBlock());
	public static final RegistryObject<Block> MARBLE_BLACK_PILLAR_LOWER = REGISTRY.register("marble_black_pillar_lower", () -> new MarbleBlackPillarLowerBlock());
	public static final RegistryObject<Block> MARBLE_BLACK_PILLAR_MIDDLE = REGISTRY.register("marble_black_pillar_middle", () -> new MarbleBlackPillarMiddleBlock());
	public static final RegistryObject<Block> MARBLE_BLACK_PILLAR_UPPER = REGISTRY.register("marble_black_pillar_upper", () -> new MarbleBlackPillarUpperBlock());
	public static final RegistryObject<Block> LIMESTONE = REGISTRY.register("limestone", () -> new LimestoneBlock());
	public static final RegistryObject<Block> POLISHED_LIMESTONE = REGISTRY.register("polished_limestone", () -> new PolishedLimestoneBlock());
	public static final RegistryObject<Block> POLISHED_LIMESTONE_SLAB = REGISTRY.register("polished_limestone_slab", () -> new PolishedLimestoneSlabBlock());
	public static final RegistryObject<Block> POLISHED_LIMESTONE_STAIRS_RECIPE = REGISTRY.register("polished_limestone_stairs_recipe", () -> new PolishedLimestoneStairsRecipeBlock());
	public static final RegistryObject<Block> LIMESTONE_BRICKS = REGISTRY.register("limestone_bricks", () -> new LimestoneBricksBlock());
	public static final RegistryObject<Block> CHISELED_LIMESTONE = REGISTRY.register("chiseled_limestone", () -> new ChiseledLimestoneBlock());
	public static final RegistryObject<Block> LIMESTONE_TILES = REGISTRY.register("limestone_tiles", () -> new LimestoneTilesBlock());
	public static final RegistryObject<Block> LIMESTONE_TILES_STAIRS = REGISTRY.register("limestone_tiles_stairs", () -> new LimestoneTilesStairsBlock());
	public static final RegistryObject<Block> LIMESTONE_TILES_SLAB = REGISTRY.register("limestone_tiles_slab", () -> new LimestoneTilesSlabBlock());
	public static final RegistryObject<Block> LIMESTONE_TILES_WALL = REGISTRY.register("limestone_tiles_wall", () -> new LimestoneTilesWallBlock());
	public static final RegistryObject<Block> LIMESTONE_CRACKED_BRICKS = REGISTRY.register("limestone_cracked_bricks", () -> new LimestoneCrackedBricksBlock());
	public static final RegistryObject<Block> ANTIMONITE = REGISTRY.register("antimonite", () -> new AntimoniteBlock());
	public static final RegistryObject<Block> POLISHED_ANTIMONITE = REGISTRY.register("polished_antimonite", () -> new PolishedAntimoniteBlock());
	public static final RegistryObject<Block> POLISHED_ANTIMONITE_SLAB = REGISTRY.register("polished_antimonite_slab", () -> new PolishedAntimoniteSlabBlock());
	public static final RegistryObject<Block> POLISHED_ANTIMONITE_STAIRS = REGISTRY.register("polished_antimonite_stairs", () -> new PolishedAntimoniteStairsBlock());
	public static final RegistryObject<Block> ANTIMONITE_PANEL = REGISTRY.register("antimonite_panel", () -> new AntimonitePanelBlock());
	public static final RegistryObject<Block> ANTIMONITE_PANEL_SLAB = REGISTRY.register("antimonite_panel_slab", () -> new AntimonitePanelSlabBlock());
	public static final RegistryObject<Block> ANTIMONITE_PANEL_STAIRS_RECIPE = REGISTRY.register("antimonite_panel_stairs_recipe", () -> new AntimonitePanelStairsRecipeBlock());
	public static final RegistryObject<Block> ANTIMONITE_TILES = REGISTRY.register("antimonite_tiles", () -> new AntimoniteTilesBlock());
	public static final RegistryObject<Block> ANTIMONITE_PATTERNED = REGISTRY.register("antimonite_patterned", () -> new AntimonitePatternedBlock());
	public static final RegistryObject<Block> ANTIMONITE_CHISELED = REGISTRY.register("antimonite_chiseled", () -> new AntimoniteChiseledBlock());
	public static final RegistryObject<Block> ANTHRACITE = REGISTRY.register("anthracite", () -> new AnthraciteBlock());
	public static final RegistryObject<Block> POLISHED_ANTHRACITE = REGISTRY.register("polished_anthracite", () -> new PolishedAnthraciteBlock());
	public static final RegistryObject<Block> POLISHED_ANTHRACITE_SLAB = REGISTRY.register("polished_anthracite_slab", () -> new PolishedAnthraciteSlabBlock());
	public static final RegistryObject<Block> POLISHED_ANTHRACITE_STAIRS = REGISTRY.register("polished_anthracite_stairs", () -> new PolishedAnthraciteStairsBlock());
	public static final RegistryObject<Block> ANTHRACITE_BRICKS = REGISTRY.register("anthracite_bricks", () -> new AnthraciteBricksBlock());
	public static final RegistryObject<Block> ANTHRACITE_BRICKS_SLAB = REGISTRY.register("anthracite_bricks_slab", () -> new AnthraciteBricksSlabBlock());
	public static final RegistryObject<Block> ANTHRACITE_BRICKS_STAIRS = REGISTRY.register("anthracite_bricks_stairs", () -> new AnthraciteBricksStairsBlock());
	public static final RegistryObject<Block> ANTHRACITE_TILED_BRICKS = REGISTRY.register("anthracite_tiled_bricks", () -> new AnthraciteTiledBricksBlock());
	public static final RegistryObject<Block> ANTHRACITE_BRICKS_SMALL = REGISTRY.register("anthracite_bricks_small", () -> new AnthraciteBricksSmallBlock());
	public static final RegistryObject<Block> ANTHRACITE_BRICKS_SMALL_SLAB = REGISTRY.register("anthracite_bricks_small_slab", () -> new AnthraciteBricksSmallSlabBlock());
	public static final RegistryObject<Block> ANTHRACITE_BRICKS_SMALL_STAIRS = REGISTRY.register("anthracite_bricks_small_stairs", () -> new AnthraciteBricksSmallStairsBlock());
	public static final RegistryObject<Block> ANTHRACITE_SMALL_TILES = REGISTRY.register("anthracite_small_tiles", () -> new AnthraciteSmallTilesBlock());
	public static final RegistryObject<Block> ASH_GILDED_GOLD = REGISTRY.register("ash_gilded_gold", () -> new AshGildedGoldBlock());
	public static final RegistryObject<Block> ASH_GILDED_IRON = REGISTRY.register("ash_gilded_iron", () -> new AshGildedIronBlock());
	public static final RegistryObject<Block> ASH_GILDED_DIAMOND = REGISTRY.register("ash_gilded_diamond", () -> new AshGildedDiamondBlock());
	public static final RegistryObject<Block> WITHERED_MOSS = REGISTRY.register("withered_moss", () -> new WitheredMossBlock());
	public static final RegistryObject<Block> LARGE_CHAINS = REGISTRY.register("large_chains", () -> new LargeChainsBlock());
	public static final RegistryObject<Block> LARGE_LANTERN = REGISTRY.register("large_lantern", () -> new LargeLanternBlock());
	public static final RegistryObject<Block> LARGE_LANTERN_WALL = REGISTRY.register("large_lantern_wall", () -> new LargeLanternWallBlock());
	public static final RegistryObject<Block> RED_ROSE = REGISTRY.register("red_rose", () -> new RedRoseBlock());
	public static final RegistryObject<Block> PINK_ROSE = REGISTRY.register("pink_rose", () -> new PinkRoseBlock());
	public static final RegistryObject<Block> CYAN_ROSE = REGISTRY.register("cyan_rose", () -> new CyanRoseBlock());
	public static final RegistryObject<Block> WHITE_ROSE = REGISTRY.register("white_rose", () -> new WhiteRoseBlock());
	public static final RegistryObject<Block> ASH_TUFFS = REGISTRY.register("ash_tuffs", () -> new AshTuffsBlock());
	public static final RegistryObject<Block> GRAPE_STAGE_1 = REGISTRY.register("grape_stage_1", () -> new GrapeStage1Block());
	public static final RegistryObject<Block> GRAPE_STAGE_2 = REGISTRY.register("grape_stage_2", () -> new GrapeStage2Block());
	public static final RegistryObject<Block> GRAPE_STAGE_3 = REGISTRY.register("grape_stage_3", () -> new GrapeStage3Block());
	public static final RegistryObject<Block> GRAPE_STAGE_4 = REGISTRY.register("grape_stage_4", () -> new GrapeStage4Block());
	public static final RegistryObject<Block> GRAPE_STAGE_5 = REGISTRY.register("grape_stage_5", () -> new GrapeStage5Block());
	public static final RegistryObject<Block> GRAPES_WHITE_STAGE_1 = REGISTRY.register("grapes_white_stage_1", () -> new GrapesWhiteStage1Block());
	public static final RegistryObject<Block> GRAPES_WHITE_STAGE_2 = REGISTRY.register("grapes_white_stage_2", () -> new GrapesWhiteStage2Block());
	public static final RegistryObject<Block> GRAPES_WHITE_STAGE_3 = REGISTRY.register("grapes_white_stage_3", () -> new GrapesWhiteStage3Block());
	public static final RegistryObject<Block> GRAPES_WHITE_STAGE_4 = REGISTRY.register("grapes_white_stage_4", () -> new GrapesWhiteStage4Block());
	public static final RegistryObject<Block> GRAPES_WHITE_STAGE_5 = REGISTRY.register("grapes_white_stage_5", () -> new GrapesWhiteStage5Block());
	public static final RegistryObject<Block> EMINENCE_STEM = REGISTRY.register("eminence_stem", () -> new EminenceStemBlock());
	public static final RegistryObject<Block> EMINENCE_PLANKS_STAIRS = REGISTRY.register("eminence_planks_stairs", () -> new EminencePlanksStairsBlock());
	public static final RegistryObject<Block> EMINENCE_PLANKS_SLAB = REGISTRY.register("eminence_planks_slab", () -> new EminencePlanksSlabBlock());
	public static final RegistryObject<Block> EMINENCE_FENCE = REGISTRY.register("eminence_fence", () -> new EminenceFenceBlock());
	public static final RegistryObject<Block> EMINENCE_FENCE_GATE = REGISTRY.register("eminence_fence_gate", () -> new EminenceFenceGateBlock());
	public static final RegistryObject<Block> EMINENCE_DOOR = REGISTRY.register("eminence_door", () -> new EminenceDoorBlock());
	public static final RegistryObject<Block> EMINENCE_TRAPDOOR = REGISTRY.register("eminence_trapdoor", () -> new EminenceTrapdoorBlock());
	public static final RegistryObject<Block> EMINENCE_ROOTS = REGISTRY.register("eminence_roots", () -> new EminenceRootsBlock());
	public static final RegistryObject<Block> EMINENCE_FLOWER = REGISTRY.register("eminence_flower", () -> new EminenceFlowerBlock());
	public static final RegistryObject<Block> EMINENCE_FUNGUS = REGISTRY.register("eminence_fungus", () -> new EminenceFungusBlock());
	public static final RegistryObject<Block> EMINENCE_WART = REGISTRY.register("eminence_wart", () -> new EminenceWartBlock());
	public static final RegistryObject<Block> CAST_IRON_BLOCK = REGISTRY.register("cast_iron_block", () -> new CastIronBlockBlock());
	public static final RegistryObject<Block> CUT_CAST_IRON = REGISTRY.register("cut_cast_iron", () -> new CutCastIronBlock());
	public static final RegistryObject<Block> CUT_IRON_PANELS = REGISTRY.register("cut_iron_panels", () -> new CutIronPanelsBlock());
	public static final RegistryObject<Block> MOSSY_NETHERRACK = REGISTRY.register("mossy_netherrack", () -> new MossyNetherrackBlock());
	public static final RegistryObject<Block> CARVED_STONE_PANEL = REGISTRY.register("carved_stone_panel", () -> new CarvedStonePanelBlock());
	public static final RegistryObject<Block> LEATHER_BLOCK = REGISTRY.register("leather_block", () -> new LeatherBlockBlock());
	public static final RegistryObject<Block> CALCITE_BRICKS = REGISTRY.register("calcite_bricks", () -> new CalciteBricksBlock());
	public static final RegistryObject<Block> CALCITE_POLISHED = REGISTRY.register("calcite_polished", () -> new CalcitePolishedBlock());
	public static final RegistryObject<Block> CALCITE_BRICKS_STAIRS = REGISTRY.register("calcite_bricks_stairs", () -> new CalciteBricksStairsBlock());
	public static final RegistryObject<Block> CALCITE_BRICKS_SLAB = REGISTRY.register("calcite_bricks_slab", () -> new CalciteBricksSlabBlock());
	public static final RegistryObject<Block> CALCITE_BRICKS_WALL = REGISTRY.register("calcite_bricks_wall", () -> new CalciteBricksWallBlock());
	public static final RegistryObject<Block> CALCITE_PATH = REGISTRY.register("calcite_path", () -> new CalcitePathBlock());
	public static final RegistryObject<Block> CALCITE_PATH_DIRT = REGISTRY.register("calcite_path_dirt", () -> new CalcitePathDirtBlock());
	public static final RegistryObject<Block> CALCITE_PATH_GRASS = REGISTRY.register("calcite_path_grass", () -> new CalcitePathGrassBlock());
	public static final RegistryObject<Block> TUFF_BRICKS = REGISTRY.register("tuff_bricks", () -> new TuffBricksBlock());
	public static final RegistryObject<Block> TUFF_TILES = REGISTRY.register("tuff_tiles", () -> new TuffTilesBlock());
	public static final RegistryObject<Block> TUFF_BRICKS_STAIRS = REGISTRY.register("tuff_bricks_stairs", () -> new TuffBricksStairsBlock());
	public static final RegistryObject<Block> TUFF_BRICKS_SLAB = REGISTRY.register("tuff_bricks_slab", () -> new TuffBricksSlabBlock());
	public static final RegistryObject<Block> TUFF_BRICKS_WALL = REGISTRY.register("tuff_bricks_wall", () -> new TuffBricksWallBlock());
	public static final RegistryObject<Block> TUFF_PATH = REGISTRY.register("tuff_path", () -> new TuffPathBlock());
	public static final RegistryObject<Block> TUFF_PATH_DIRT = REGISTRY.register("tuff_path_dirt", () -> new TuffPathDirtBlock());
	public static final RegistryObject<Block> TUFF_PATH_GRASS = REGISTRY.register("tuff_path_grass", () -> new TuffPathGrassBlock());
	public static final RegistryObject<Block> SCORIA_GRAY = REGISTRY.register("scoria_gray", () -> new ScoriaGrayBlock());
	public static final RegistryObject<Block> SCORIA_POLISHED = REGISTRY.register("scoria_polished", () -> new ScoriaPolishedBlock());
	public static final RegistryObject<Block> SCORIA_BRICKS = REGISTRY.register("scoria_bricks", () -> new ScoriaBricksBlock());
	public static final RegistryObject<Block> SCORIA_BRICKS_STAIRS = REGISTRY.register("scoria_bricks_stairs", () -> new ScoriaBricksStairsBlock());
	public static final RegistryObject<Block> SCORIA_BRICKS_SLAB_RECIPE = REGISTRY.register("scoria_bricks_slab_recipe", () -> new ScoriaBricksSlabRecipeBlock());
	public static final RegistryObject<Block> SCORIA_RED = REGISTRY.register("scoria_red", () -> new ScoriaRedBlock());
	public static final RegistryObject<Block> SCORIA_RED_POLISHED = REGISTRY.register("scoria_red_polished", () -> new ScoriaRedPolishedBlock());
	public static final RegistryObject<Block> SCORIA_RED_BRICKS = REGISTRY.register("scoria_red_bricks", () -> new ScoriaRedBricksBlock());
	public static final RegistryObject<Block> SCORIA_RED_BRICKS_STAIRS = REGISTRY.register("scoria_red_bricks_stairs", () -> new ScoriaRedBricksStairsBlock());
	public static final RegistryObject<Block> SCORIA_RED_BRICKS_SLAB = REGISTRY.register("scoria_red_bricks_slab", () -> new ScoriaRedBricksSlabBlock());
	public static final RegistryObject<Block> NETHERRACK_PATH = REGISTRY.register("netherrack_path", () -> new NetherrackPathBlock());
	public static final RegistryObject<Block> NETHERRACK_PATH_CRIMSON_NYLIUM = REGISTRY.register("netherrack_path_crimson_nylium", () -> new NetherrackPathCrimsonNyliumBlock());
	public static final RegistryObject<Block> NETHERRACK_PATH_WARPED_NYLIUM = REGISTRY.register("netherrack_path_warped_nylium", () -> new NetherrackPathWarpedNyliumBlock());
	public static final RegistryObject<Block> CUT_DIRT = REGISTRY.register("cut_dirt", () -> new CutDirtBlock());
	public static final RegistryObject<Block> CAST_IRON_TILES = REGISTRY.register("cast_iron_tiles", () -> new CastIronTilesBlock());
	public static final RegistryObject<Block> LARGE_CAST_IRON_BLOCK = REGISTRY.register("large_cast_iron_block", () -> new LargeCastIronBlockBlock());
	public static final RegistryObject<Block> SMOOTH_CUT_CAST_IRON = REGISTRY.register("smooth_cut_cast_iron", () -> new SmoothCutCastIronBlock());
	public static final RegistryObject<Block> SMOOTH_CAST_IRON_BLOCK = REGISTRY.register("smooth_cast_iron_block", () -> new SmoothCastIronBlockBlock());
	public static final RegistryObject<Block> RIBBED_CAST_IRON = REGISTRY.register("ribbed_cast_iron", () -> new RibbedCastIronBlock());
	public static final RegistryObject<Block> TOPAZ_ORE = REGISTRY.register("topaz_ore", () -> new TopazOreBlock());
	public static final RegistryObject<Block> TOPAZ_BLOCK = REGISTRY.register("topaz_block", () -> new TopazBlockBlock());
	public static final RegistryObject<Block> POLISHED_STONE = REGISTRY.register("polished_stone", () -> new PolishedStoneBlock());
	public static final RegistryObject<Block> GLOWING_OBSIDIAN = REGISTRY.register("glowing_obsidian", () -> new GlowingObsidianBlock());
	public static final RegistryObject<Block> UNDERWORLD_PORTAL = REGISTRY.register("underworld_portal", () -> new UnderworldPortalBlock());
	public static final RegistryObject<Block> UNDERWORLD_DIRT = REGISTRY.register("underworld_dirt", () -> new UnderworldDirtBlock());
	public static final RegistryObject<Block> UNDERWORLD_GRASS = REGISTRY.register("underworld_grass", () -> new UnderworldGrassBlock());
	public static final RegistryObject<Block> CARBORITE = REGISTRY.register("carborite", () -> new CarboriteBlock());
	public static final RegistryObject<Block> CARBORITE_POLISHED = REGISTRY.register("carborite_polished", () -> new CarboritePolishedBlock());
	public static final RegistryObject<Block> UNDERWORLD_GRASS_PLANT = REGISTRY.register("underworld_grass_plant", () -> new UnderworldGrassPlantBlock());
	public static final RegistryObject<Block> UNDERWORLD_GRASS_TUFTS = REGISTRY.register("underworld_grass_tufts", () -> new UnderworldGrassTuftsBlock());
	public static final RegistryObject<Block> UNDERWORLD_GRASS_FLOWEREDF = REGISTRY.register("underworld_grass_floweredf", () -> new UnderworldGrassFloweredfBlock());
	public static final RegistryObject<Block> UNDERWORLD_GRASS_TALL = REGISTRY.register("underworld_grass_tall", () -> new UnderworldGrassTallBlock());
	public static final RegistryObject<Block> BLOOD_OAK_LOG = REGISTRY.register("blood_oak_log", () -> new BloodOakLogBlock());
	public static final RegistryObject<Block> BLOOD_OAK_LEAVES = REGISTRY.register("blood_oak_leaves", () -> new BloodOakLeavesBlock());
	public static final RegistryObject<Block> BLOOD_OAK_PLANKS = REGISTRY.register("blood_oak_planks", () -> new BloodOakPlanksBlock());
	public static final RegistryObject<Block> BLOOD_OAK_PLANKS_STAIRS = REGISTRY.register("blood_oak_planks_stairs", () -> new BloodOakPlanksStairsBlock());
	public static final RegistryObject<Block> BLOOD_OAK_SLAB = REGISTRY.register("blood_oak_slab", () -> new BloodOakSlabBlock());
	public static final RegistryObject<Block> BLOOD_OAK_FENCE = REGISTRY.register("blood_oak_fence", () -> new BloodOakFenceBlock());
	public static final RegistryObject<Block> BLOOD_OAK_FENCE_GATE = REGISTRY.register("blood_oak_fence_gate", () -> new BloodOakFenceGateBlock());
	public static final RegistryObject<Block> BLOOD_OAK_PRESSURE_PLATE = REGISTRY.register("blood_oak_pressure_plate", () -> new BloodOakPressurePlateBlock());
	public static final RegistryObject<Block> BLOOD_OAK_BUTTON = REGISTRY.register("blood_oak_button", () -> new BloodOakButtonBlock());
	public static final RegistryObject<Block> BLOOD_OAK_DOOR = REGISTRY.register("blood_oak_door", () -> new BloodOakDoorBlock());
	public static final RegistryObject<Block> BLOOD_OAK_TRAPDOOR = REGISTRY.register("blood_oak_trapdoor", () -> new BloodOakTrapdoorBlock());
	public static final RegistryObject<Block> FROST = REGISTRY.register("frost", () -> new FrostBlock());
	public static final RegistryObject<Block> PEAK_SCHIST = REGISTRY.register("peak_schist", () -> new PeakSchistBlock());
	public static final RegistryObject<Block> PEAK_SCHIST_POLISHED = REGISTRY.register("peak_schist_polished", () -> new PeakSchistPolishedBlock());
	public static final RegistryObject<Block> PEAK_SCHIST_STAIRS = REGISTRY.register("peak_schist_stairs", () -> new PeakSchistStairsBlock());
	public static final RegistryObject<Block> PEAK_SCHIST_SLAB = REGISTRY.register("peak_schist_slab", () -> new PeakSchistSlabBlock());
	public static final RegistryObject<Block> PEAK_SCHIST_BRICKS = REGISTRY.register("peak_schist_bricks", () -> new PeakSchistBricksBlock());
	public static final RegistryObject<Block> PEAK_SCHIST_BRICKS_WALL = REGISTRY.register("peak_schist_bricks_wall", () -> new PeakSchistBricksWallBlock());
	public static final RegistryObject<Block> UNDERWORLD_GRASS_FROSTED = REGISTRY.register("underworld_grass_frosted", () -> new UnderworldGrassFrostedBlock());
	public static final RegistryObject<Block> UNDERWORLD_GRASS_SHORT_FROSTED = REGISTRY.register("underworld_grass_short_frosted", () -> new UnderworldGrassShortFrostedBlock());
	public static final RegistryObject<Block> UNDERWORLD_GRASS_TALL_FROSTED = REGISTRY.register("underworld_grass_tall_frosted", () -> new UnderworldGrassTallFrostedBlock());
	public static final RegistryObject<Block> UNDERWORLD_BELLFLOWER = REGISTRY.register("underworld_bellflower", () -> new UnderworldBellflowerBlock());
	public static final RegistryObject<Block> PURPLE_BURST_FLOWER = REGISTRY.register("purple_burst_flower", () -> new PurpleBurstFlowerBlock());
	public static final RegistryObject<Block> YELLOW_BURSTDFLOWER = REGISTRY.register("yellow_burstdflower", () -> new YellowBurstdflowerBlock());
	public static final RegistryObject<Block> BUDDED_FLOWER = REGISTRY.register("budded_flower", () -> new BuddedFlowerBlock());
	public static final RegistryObject<Block> CIRCULATUM_FLOWER = REGISTRY.register("circulatum_flower", () -> new CirculatumFlowerBlock());
	public static final RegistryObject<Block> OPEN_FLOWER = REGISTRY.register("open_flower", () -> new OpenFlowerBlock());
	public static final RegistryObject<Block> SUN_DIAL_FLOWER = REGISTRY.register("sun_dial_flower", () -> new SunDialFlowerBlock());
	public static final RegistryObject<Block> CARBORITE_COBBLESTONE = REGISTRY.register("carborite_cobblestone", () -> new CarboriteCobblestoneBlock());
	public static final RegistryObject<Block> CRACKED_CARBORITE = REGISTRY.register("cracked_carborite", () -> new CrackedCarboriteBlock());
	public static final RegistryObject<Block> VEKRENITE = REGISTRY.register("vekrenite", () -> new VekreniteBlock());
	public static final RegistryObject<Block> VEKRENITE_POLISHED = REGISTRY.register("vekrenite_polished", () -> new VekrenitePolishedBlock());
	public static final RegistryObject<Block> VEKRENITE_BRICKS = REGISTRY.register("vekrenite_bricks", () -> new VekreniteBricksBlock());
	public static final RegistryObject<Block> VEKRENITE_BRICKS_STAIRS = REGISTRY.register("vekrenite_bricks_stairs", () -> new VekreniteBricksStairsBlock());
	public static final RegistryObject<Block> VEKRENITE_BRICKS_SLAB = REGISTRY.register("vekrenite_bricks_slab", () -> new VekreniteBricksSlabBlock());
	public static final RegistryObject<Block> VEKRENITE_BRICKS_WALL = REGISTRY.register("vekrenite_bricks_wall", () -> new VekreniteBricksWallBlock());
	public static final RegistryObject<Block> ROSE_GOLD_ORE = REGISTRY.register("rose_gold_ore", () -> new RoseGoldOreBlock());
	public static final RegistryObject<Block> ROSE_GOLD_BLOCK = REGISTRY.register("rose_gold_block", () -> new RoseGoldBlockBlock());
	public static final RegistryObject<Block> RAW_ROSE_GOLD_BLOCK = REGISTRY.register("raw_rose_gold_block", () -> new RawRoseGoldBlockBlock());
	public static final RegistryObject<Block> COTTON_STAGE_1 = REGISTRY.register("cotton_stage_1", () -> new CottonStage1Block());
	public static final RegistryObject<Block> COTTON_STAGE_2 = REGISTRY.register("cotton_stage_2", () -> new CottonStage2Block());
	public static final RegistryObject<Block> COTTON_STAGE_3 = REGISTRY.register("cotton_stage_3", () -> new CottonStage3Block());
	public static final RegistryObject<Block> COTTON_STAGE_4 = REGISTRY.register("cotton_stage_4", () -> new CottonStage4Block());
	public static final RegistryObject<Block> STRAWBERRY_STAGE_1 = REGISTRY.register("strawberry_stage_1", () -> new StrawberryStage1Block());
	public static final RegistryObject<Block> STRAWBERRY_STAGE_2 = REGISTRY.register("strawberry_stage_2", () -> new StrawberryStage2Block());
	public static final RegistryObject<Block> STRAWBERRY_STAGE_3 = REGISTRY.register("strawberry_stage_3", () -> new StrawberryStage3Block());
	public static final RegistryObject<Block> STRAWBERRY_STAGE_4 = REGISTRY.register("strawberry_stage_4", () -> new StrawberryStage4Block());
	public static final RegistryObject<Block> STRAWBERRY_STAGE_5 = REGISTRY.register("strawberry_stage_5", () -> new StrawberryStage5Block());
	public static final RegistryObject<Block> TOMATO_STAGE_1 = REGISTRY.register("tomato_stage_1", () -> new TomatoStage1Block());
	public static final RegistryObject<Block> TOMATO_STAGE_2 = REGISTRY.register("tomato_stage_2", () -> new TomatoStage2Block());
	public static final RegistryObject<Block> TOMATO_STAGE_3 = REGISTRY.register("tomato_stage_3", () -> new TomatoStage3Block());
	public static final RegistryObject<Block> TOMATO_STAGE_4 = REGISTRY.register("tomato_stage_4", () -> new TomatoStage4Block());
	public static final RegistryObject<Block> TOMATO_STAGE_5 = REGISTRY.register("tomato_stage_5", () -> new TomatoStage5Block());
	public static final RegistryObject<Block> BAUXITE = REGISTRY.register("bauxite", () -> new BauxiteBlock());
	public static final RegistryObject<Block> BAUXITE_POLISHED = REGISTRY.register("bauxite_polished", () -> new BauxitePolishedBlock());
	public static final RegistryObject<Block> BAUXITE_POLISHED_STAIRS = REGISTRY.register("bauxite_polished_stairs", () -> new BauxitePolishedStairsBlock());
	public static final RegistryObject<Block> BAUXITE_POLISHED_SLAB = REGISTRY.register("bauxite_polished_slab", () -> new BauxitePolishedSlabBlock());
	public static final RegistryObject<Block> CORKITE = REGISTRY.register("corkite", () -> new CorkiteBlock());
	public static final RegistryObject<Block> POLISHED_CORKITE = REGISTRY.register("polished_corkite", () -> new PolishedCorkiteBlock());
	public static final RegistryObject<Block> CORKITE_POLISHED_STAIRS = REGISTRY.register("corkite_polished_stairs", () -> new CorkitePolishedStairsBlock());
	public static final RegistryObject<Block> CORKITE_BRICKS = REGISTRY.register("corkite_bricks", () -> new CorkiteBricksBlock());
	public static final RegistryObject<Block> CORKITE_POLISHED_SLAB = REGISTRY.register("corkite_polished_slab", () -> new CorkitePolishedSlabBlock());
	public static final RegistryObject<Block> HEATED_CORKITE = REGISTRY.register("heated_corkite", () -> new HeatedCorkiteBlock());
	public static final RegistryObject<Block> MORGONITE = REGISTRY.register("morgonite", () -> new MorgoniteBlock());
	public static final RegistryObject<Block> MORGONITE_POLISHED = REGISTRY.register("morgonite_polished", () -> new MorgonitePolishedBlock());
	public static final RegistryObject<Block> MORGONITE_BRICKS = REGISTRY.register("morgonite_bricks", () -> new MorgoniteBricksBlock());
	public static final RegistryObject<Block> MORGONITE_BRICKS_STAIRS = REGISTRY.register("morgonite_bricks_stairs", () -> new MorgoniteBricksStairsBlock());
	public static final RegistryObject<Block> MORGONITE_BRICKS_SLAB = REGISTRY.register("morgonite_bricks_slab", () -> new MorgoniteBricksSlabBlock());
	public static final RegistryObject<Block> VENOMITE = REGISTRY.register("venomite", () -> new VenomiteBlock());
	public static final RegistryObject<Block> VENOMITE_POLISHED = REGISTRY.register("venomite_polished", () -> new VenomitePolishedBlock());
	public static final RegistryObject<Block> VENOMITE_POLISHED_STAIRS = REGISTRY.register("venomite_polished_stairs", () -> new VenomitePolishedStairsBlock());
	public static final RegistryObject<Block> VENOMITE_POLISHED_SLAB = REGISTRY.register("venomite_polished_slab", () -> new VenomitePolishedSlabBlock());
	public static final RegistryObject<Block> RHODUSITE = REGISTRY.register("rhodusite", () -> new RhodusiteBlock());
	public static final RegistryObject<Block> RHODUSITE_POLISHED = REGISTRY.register("rhodusite_polished", () -> new RhodusitePolishedBlock());
	public static final RegistryObject<Block> RHODUSITE_BRICKS = REGISTRY.register("rhodusite_bricks", () -> new RhodusiteBricksBlock());
	public static final RegistryObject<Block> RHODUSITE_BRICKS_STAIRS = REGISTRY.register("rhodusite_bricks_stairs", () -> new RhodusiteBricksStairsBlock());
	public static final RegistryObject<Block> RHODUSITE_BRICKS_SLAB = REGISTRY.register("rhodusite_bricks_slab", () -> new RhodusiteBricksSlabBlock());
	public static final RegistryObject<Block> GREEN_FIRE = REGISTRY.register("green_fire", () -> new GreenFireBlock());
	public static final RegistryObject<Block> MICHERITE_ORE = REGISTRY.register("micherite_ore", () -> new MicheriteOreBlock());
	public static final RegistryObject<Block> QUARTZ_DUST_BLOCK = REGISTRY.register("quartz_dust_block", () -> new QuartzDustBlockBlock());
	public static final RegistryObject<Block> ICE_SPIKE_BLOCK = REGISTRY.register("ice_spike_block", () -> new IceSpikeBlockBlock());
	public static final RegistryObject<Block> TALL_ICE_SPIKE_BLOCK = REGISTRY.register("tall_ice_spike_block", () -> new TallIceSpikeBlockBlock());
	public static final RegistryObject<Block> CHALK_WHITE = REGISTRY.register("chalk_white", () -> new ChalkWhiteBlock());
	public static final RegistryObject<Block> CHALK_BLUE = REGISTRY.register("chalk_blue", () -> new ChalkBlueBlock());
	public static final RegistryObject<Block> CHALK_RED = REGISTRY.register("chalk_red", () -> new ChalkRedBlock());
	public static final RegistryObject<Block> CREAMALAN = REGISTRY.register("creamalan", () -> new CreamalanBlock());
	public static final RegistryObject<Block> CREAMALEN_POLISHED = REGISTRY.register("creamalen_polished", () -> new CreamalenPolishedBlock());
	public static final RegistryObject<Block> CREAMALEN_COBBLESTONE = REGISTRY.register("creamalen_cobblestone", () -> new CreamalenCobblestoneBlock());
	public static final RegistryObject<Block> CREAMALEN_SMOOTH = REGISTRY.register("creamalen_smooth", () -> new CreamalenSmoothBlock());
	public static final RegistryObject<Block> DARKONITE = REGISTRY.register("darkonite", () -> new DarkoniteBlock());
	public static final RegistryObject<Block> DARKONITE_SNOWY = REGISTRY.register("darkonite_snowy", () -> new DarkoniteSnowyBlock());
	public static final RegistryObject<Block> UNDERWORLD_GRASS_RED = REGISTRY.register("underworld_grass_red", () -> new UnderworldGrassRedBlock());
	public static final RegistryObject<Block> UNDERWORLD_GRASS_RED_FLOWERED = REGISTRY.register("underworld_grass_red_flowered", () -> new UnderworldGrassRedFloweredBlock());
	public static final RegistryObject<Block> DARKONITE_POLISHED = REGISTRY.register("darkonite_polished", () -> new DarkonitePolishedBlock());
	public static final RegistryObject<Block> DARKONITE_POLISHED_STAIRS = REGISTRY.register("darkonite_polished_stairs", () -> new DarkonitePolishedStairsBlock());
	public static final RegistryObject<Block> DARKONITE_POLISHED_SLAB = REGISTRY.register("darkonite_polished_slab", () -> new DarkonitePolishedSlabBlock());
	public static final RegistryObject<Block> DARKONITE_BRICKS = REGISTRY.register("darkonite_bricks", () -> new DarkoniteBricksBlock());
	public static final RegistryObject<Block> DARKONITE_BRICKS_STAIRS = REGISTRY.register("darkonite_bricks_stairs", () -> new DarkoniteBricksStairsBlock());
	public static final RegistryObject<Block> DARKONITE_BRICKS_SLAB = REGISTRY.register("darkonite_bricks_slab", () -> new DarkoniteBricksSlabBlock());
	public static final RegistryObject<Block> DARKONITE_CHISELED = REGISTRY.register("darkonite_chiseled", () -> new DarkoniteChiseledBlock());
	public static final RegistryObject<Block> DARKONITE_TILES = REGISTRY.register("darkonite_tiles", () -> new DarkoniteTilesBlock());
	public static final RegistryObject<Block> DARKONITE_CARVED = REGISTRY.register("darkonite_carved", () -> new DarkoniteCarvedBlock());
	public static final RegistryObject<Block> RAW_SILVER_BLOCK = REGISTRY.register("raw_silver_block", () -> new RawSilverBlockBlock());
	public static final RegistryObject<Block> SILVER_ORE = REGISTRY.register("silver_ore", () -> new SilverOreBlock());
	public static final RegistryObject<Block> RAW_ACTINIUM_BLOCK = REGISTRY.register("raw_actinium_block", () -> new RawActiniumBlockBlock());
	public static final RegistryObject<Block> ACTINIUM_ORE = REGISTRY.register("actinium_ore", () -> new ActiniumOreBlock());
	public static final RegistryObject<Block> UNDERWORLD_SAND = REGISTRY.register("underworld_sand", () -> new UnderworldSandBlock());
	public static final RegistryObject<Block> UNDERWORLD_SANDSTONE = REGISTRY.register("underworld_sandstone", () -> new UnderworldSandstoneBlock());
	public static final RegistryObject<Block> CACTUS = REGISTRY.register("cactus", () -> new CactusBlock());
	public static final RegistryObject<Block> DEAD_WEEDS = REGISTRY.register("dead_weeds", () -> new DeadWeedsBlock());
	public static final RegistryObject<Block> DEAD_WEEDS_2 = REGISTRY.register("dead_weeds_2", () -> new DeadWeeds2Block());
	public static final RegistryObject<Block> DEAD_WEEDS_3 = REGISTRY.register("dead_weeds_3", () -> new DeadWeeds3Block());
	public static final RegistryObject<Block> DARKONITE_BLACK = REGISTRY.register("darkonite_black", () -> new DarkoniteBlackBlock());
	public static final RegistryObject<Block> DARKONITE_BLACK_POLISHED = REGISTRY.register("darkonite_black_polished", () -> new DarkoniteBlackPolishedBlock());
	public static final RegistryObject<Block> DARKONITE_BLACK_POLISHED_STAIRS = REGISTRY.register("darkonite_black_polished_stairs", () -> new DarkoniteBlackPolishedStairsBlock());
	public static final RegistryObject<Block> DARKONITE_BLACK_POLISHED_SLAB = REGISTRY.register("darkonite_black_polished_slab", () -> new DarkoniteBlackPolishedSlabBlock());
	public static final RegistryObject<Block> DARKONITE_BLACK_BRICKS = REGISTRY.register("darkonite_black_bricks", () -> new DarkoniteBlackBricksBlock());
	public static final RegistryObject<Block> DARKONITE_BLACK_BRICKS_STAIRS = REGISTRY.register("darkonite_black_bricks_stairs", () -> new DarkoniteBlackBricksStairsBlock());
	public static final RegistryObject<Block> DARKONITE_BLACK_BRICKS_SLAB = REGISTRY.register("darkonite_black_bricks_slab", () -> new DarkoniteBlackBricksSlabBlock());
	public static final RegistryObject<Block> DARKONITE_BLACK_CHISELED = REGISTRY.register("darkonite_black_chiseled", () -> new DarkoniteBlackChiseledBlock());
	public static final RegistryObject<Block> DARKONITE_BLACK_TILES = REGISTRY.register("darkonite_black_tiles", () -> new DarkoniteBlackTilesBlock());
	public static final RegistryObject<Block> DARKONITE_BLACK_CARVED = REGISTRY.register("darkonite_black_carved", () -> new DarkoniteBlackCarvedBlock());

	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
	public static class ClientSideHandler {
		@SubscribeEvent
		public static void blockColorLoad(RegisterColorHandlersEvent.Block event) {
			UnderworldGrassBlock.blockColorLoad(event);
			UnderworldGrassRedBlock.blockColorLoad(event);
		}

		@SubscribeEvent
		public static void itemColorLoad(RegisterColorHandlersEvent.Item event) {
			UnderworldGrassBlock.itemColorLoad(event);
			UnderworldGrassRedBlock.itemColorLoad(event);
		}
	}
}
